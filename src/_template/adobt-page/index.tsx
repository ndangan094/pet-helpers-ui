import Header from "../../_layout/header";
import Footer from "../../_layout/footer";
import { Row, Col, Carousel, Button } from "antd";
import { RightOutlined } from "@ant-design/icons";
import "antd/dist/antd.css";
import { useRouter } from "next/router";
import { AdobtPageComponent ,FindPetComponent,PetCategory,PetTag,ListPet,PetBox} from "./styled-conponents";
import Icon from '@ant-design/icons';
import CatPng from '../../../public/pawprint.png'
import { useState } from "react";
import { useEffect } from "react";
import { Pet } from "../../models/pet";
import { getGender } from "../../hooks/ultis.hook";


const AdobtPageTemplate = () => {
 
  const CatIcon = () => <img src={CatPng} />;
  const router = useRouter();
  const handleDonateClick = () => {
    router.push("/donation");
  };
  const handleVolunteerClick = () => {
    router.push("/volunteer");
  };
  const handleAdobtClick = () => {
    router.push("/adobt");
  };

  const [petCategory,setPetCategory] = useState("");
  const [pet,setPet] = useState<Pet[]>();

  const chooseCategory = (category) => {
    setPetCategory(category);
  }

  useEffect(() => {
    getPet();
  }, [petCategory])


  const getPet = async () => {
    const response = {
      method: 'GET',
    };
    try {
      const fetchResponse = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/pets` + (petCategory === ""?"":`?species=${petCategory}`), response);
      if(fetchResponse.status==200){
        const data = await fetchResponse.json();
        console.log(data.pets);
        const _item: Pet[] = data.pets.map((item)=>{
          return({
            id:item.id,
            name: item.name,
            age: item.age,
            color: item.color,
            health_condition: item.health_condition,
            weight: item.weight,
            description: item.description,
            species: item.species,
            image: item.images,
            sex:item.gender
          })
        })
        console.log("item---->",_item)
        setPet(_item);
        console.log("pet----->",pet)
      }
    } catch (e) {
      return e;
    }
  }

  const Tag = ({tag,value,isHide}) => {
    return <>
        <div style={{display:"flex",flexDirection:"row", borderBottom:`${!isHide?"1":"0"}px dashed #cecece`,margin:"5px 0 5px 0"}}>
          <div style={{marginRight:"5px",fontWeight:"bold"}}>{tag}</div>
          <div>{value}</div>
        </div>
    </>
  }

  return (
    <>
      <Header />
      <AdobtPageComponent className="home-page-container">
        <Row className="adobt-page-header">
          <div data-aos="fade-up" data-aos-duration="1500" className="adobt-heading-container">
            <h1>Nh·∫≠n Nu√¥i</h1>
            <div className="breadcrumb">
              <span
                className="breadcrumb-item"
                onClick={() => {
                  router.push("/");
                }}
              >
                Trang ch·ªß
              </span>

              <span className="breadcrumb-active"> / Nh·∫≠n Nu√¥i</span>
            </div>
          </div>
        </Row>
        <Row style={{backgroundColor:"white"}} className="adobt-page-content" data-aos="zoom-in" data-aos-duration="1500" >
          <Col span={5}></Col>
          <Col span={14}>
            <Row>
              <Col className="process" span={16}>
                <h3>quy tr√¨nh nh·∫≠n nu√¥i</h3>
                <hr />
                <p>
                  Tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh nh·∫≠n nu√¥i b√© ch√≥ hay m√®o n√†o, b·∫°n h√£y t·ª±
                  h·ªèi b·∫£n th√¢n r·∫±ng m√¨nh ƒë√£ s·∫µn s√†ng ƒë·ªÉ ch·ªãu tr√°ch nhi·ªám c·∫£ ƒë·ªùi
                  cho b√© ch∆∞a, c·∫£ v·ªÅ t√†i ch√≠nh, n∆°i ·ªü c≈©ng nh∆∞ tinh th·∫ßn. Vi·ªác
                  nh·∫≠n nu√¥i c·∫ßn ƒë∆∞·ª£c s·ª± ƒë·ªìng thu·∫≠n l·ªõn t·ª´ b·∫£n th√¢n b·∫°n c≈©ng nh∆∞
                  gia ƒë√¨nh v√† nh·ªØng ng∆∞·ªùi li√™n quan. Xin c√¢n nh·∫Øc k·ªπ tr∆∞·ªõc khi
                  li√™n h·ªá v·ªõi HPA v·ªÅ vi·ªác nh·∫≠n nu√¥i.
                  <br />
                  <br />
                  B·∫°n ƒë√£ s·∫µn s√†ng? H√£y th·ª±c hi·ªán c√°c b∆∞·ªõc sau ƒë√¢y nh√©:
                  <br />
                  <br />
                  1Ô∏è‚É£ T√¨m hi·ªÉu v·ªÅ th√∫ c∆∞ng b·∫°n mu·ªën nh·∫≠n nu√¥i tr√™n trang web c·ªßa
                  HPA.
                  <br />
                  2Ô∏è‚É£ Li√™n h·ªá v·ªõi T√¨nh nguy·ªán vi√™n ph·ª• tr√°ch b√© ƒë·ªÉ t√¨m hi·ªÉu th√™m
                  v·ªÅ b√©.
                  <br />
                  3Ô∏è‚É£ Tham gia ph·ªèng v·∫•n nh·∫≠n nu√¥i.
                  <br />
                  4Ô∏è‚É£ Chu·∫©n b·ªã c∆° s·ªü v·∫≠t ch·∫•t, k√Ω gi·∫•y t·ªù nh·∫≠n nu√¥i v√† ƒë√≥ng ti·ªÅn
                  v√≠a ƒë·ªÉ ƒë√≥n b√© v·ªÅ.
                  <br />
                  5Ô∏è‚É£ Th∆∞·ªùng xuy√™n c·∫≠p nh·∫≠t v·ªÅ t√¨nh h√¨nh c·ªßa b√©, ƒë·∫∑c bi·ªát l√† khi
                  c√≥ s·ª± c·ªë ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n k·ªãp th·ªùi.
                  <br />
                  <br />
                  ‚ùó L∆∞u √Ω:
                  <br />
                  - Ch·ªâ inbox 01 T√¨nh nguy·ªán vi√™n ph·ªèng v·∫•n, KH√îNG N√äN inbox t·∫•t
                  c·∫£ danh s√°ch. Tr∆∞·ªùng h·ª£p TNV ch∆∞a ph·∫£n h·ªìi l·∫°i trong v√≤ng 1
                  ng√†y, vui l√≤ng inbox cho Page.
                  <br />- Ph·∫ßn ph·ªèng v·∫•n c√≥ th·ªÉ c√≥ nhi·ªÅu c√¢u h·ªèi mang t√≠nh ch·∫•t
                  ri√™ng t∆∞, v√¨ v·∫≠y mong b·∫°n h√£y ki√™n nh·∫´n nh√©!
                  <br></br>
                  - Tr∆∞·ªùng h·ª£p kh√¥ng nu√¥i ƒë∆∞·ª£c ti·∫øp c·∫ßn tr·∫£ l·∫°i cho Nh√≥m, kh√¥ng
                  t·ª± √Ω ƒëem cho ng∆∞·ªùi kh√°c.
                  <br />
                  <br />
                  üêï‚Äçü¶∫ N·∫øu b·∫°n ch·ªâ c√≥ th·ªÉ chƒÉm s√≥c t·∫°m th·ªùi (foster), tham kh·∫£o
                  th√¥ng tin t·∫°i m·ª•c T√¨nh nguy·ªán.
                  <br />
                  <br />
                  üêà T√¨m hi·ªÉu th√™m v·ªÅ ch∆∞∆°ng tr√¨nh Nh·∫≠n nu√¥i ·∫¢o ·ªü banner cu·ªëi
                  trang n√†y.
                </p>
              </Col>
              <Col span={8}>
                <div className="condition">
                  <h5>ƒëi·ªÅu ki·ªán nh·∫≠n nu√¥i</h5>
                  <ul>
                    <li><CatIcon /><span>T√†i ch√≠nh t·ª± ch·ªß v√† ·ªïn ƒë·ªãnh</span></li>
                    <li><CatIcon /><span>Ch·ªó ·ªü c·ªë ƒë·ªãnh, ∆∞u ti√™n t·∫°i H√† N·ªôi</span></li>
                    <li><CatIcon /><span>Cam k·∫øt ti√™m ph√≤ng v√† tri·ªát s·∫£n</span></li>
                  </ul>
                </div>
              </Col>
            </Row>
          <FindPetComponent>
            <div style={{fontSize:"30px",fontWeight:"bold",textAlign:'center'}}>T√åM TH√ö C∆ØNG</div>
            <PetCategory>
              <PetTag style={{backgroundColor:(petCategory === "")?"#018ae0":"#fc0"}} onClick={()=>{chooseCategory("")}}>T·∫•t c·∫£</PetTag>
              <PetTag style={{backgroundColor:(petCategory === "dog")?"#018ae0":"#fc0"}} onClick={()=>{chooseCategory("dog")}}>Ch√≥</PetTag>
              <PetTag style={{backgroundColor:(petCategory === "cat")?"#018ae0":"#fc0"}} onClick={()=>{chooseCategory("cat")}}>M√®o</PetTag>
            </PetCategory>
          </FindPetComponent>
            <ListPet>
              {pet?.map((item)=>{
                return <>
                <PetBox onClick={()=>{router.push({pathname:"/adobt/pet-detail",query:{id:item.id}})}}>
                  <img style={{width:"100%",height:"219px",objectFit:"cover"}} src={item?.image[0]?.url?item?.image[0]?.url:"https://i.vimeocdn.com/portrait/1274237_300x300.jpg"} />
                  <div style={{fontSize: "1.3125rem",
                    fontWeight: "bold"}}>{item.name}</div>
                  <div style={{width:"50px",height:"2px",backgroundColor:"#cecece"}}>
                  </div>
                  <Tag isHide={false} tag={"Gi·ªõi t√≠nh:"} value={item.sex ==="male"?"ƒê·ª±c":"C√°i"}/>
                  <Tag isHide={false} tag={"Tu·ªïi:"} value={getGender(item.age)}/>
                  <Tag isHide={true} tag={"S·ª©c kho·∫ª:"} value={item.health_condition}/>
                </PetBox>
                </>
              })}
            </ListPet>
          </Col>
          <Col span={5}></Col>
        </Row>
      </AdobtPageComponent>
      <Footer />
    </>
  );
};

export default AdobtPageTemplate;
